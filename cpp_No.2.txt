main.cpp
#include <iostream>
#include "menu.h"

using namespace std;

int main()
{
	StuM S;
	int opt = -1;
	do {
		outMenu();
		cout << "请输入选项：";
		opt = -1;
		cin >> opt;
		switch (opt)
		{
		case 1:	//添加
		
			S.add();
			break;
		
		case 2:	//查询
		
			S.query();
			break;
		
		case 3:	//删除
		
			S.Delete();
			break;
		
		case 4:	//更新
		
			S.update();
			break;
		
		case 5://显示
		
			S.put();
			break;
		
		case 6:	//统计
		
			S.statistics();
			break;
		
		case 0:
		
			cout << "--------------感谢使用--------------";
			break;
		

		default:
		
			cout << "输入菜单编号有误,请重新输入！" << endl;
			cout << endl;
			break;
		}
	} while (opt != 0);
	return 0;
}





menu.cpp
#define _CRT_SECURE_NO_WARNINGS 
#include <iostream> 
#include <algorithm>
#include"menu.h"
using namespace std;

void outMenu()//输出菜单
{
	cout << "----------欢迎进入学生信息管理信息----------";
	cout << endl;
	cout << "              1.添加学生信息";
	cout << endl;
	cout << "              2.查询学生信息";
	cout << endl;
	cout << "              3.删除学生信息";
	cout << endl;
	cout << "              4.修改学生信息";
	cout << endl;
	cout << "              5.显示学生信息";
	cout << endl;
	cout << "              6.统计分析";
	cout << endl;
	cout << "              0.退出系统";
	cout << endl;
	cout << "-------------------------------------------";
	cout << endl;
}

void StuM::add()		//添加
{
	system("cls");
	Student s[50]; 

	int n;
	int i = 1;
	int flag = 1;
	cout << "----------添加学生信息----------" << endl;
	cout << "请输入要添加的学生数：";
	cin >> n;
	int N = getStudent(student);
	while (i <= n)
	{
		cout << "请输入第" << i << "名学生信息" << endl;
		cout << "请输入学生学号：";
		cin >> s[i].num;

		for (int j = 1; j < N; j++)//查重
		{
			if (strcmp(s[i].num,student[j].num)==0&&student[j].del==0)
			{
				cout << "学号已存在！请重新输入：" << endl;
				flag = 0;
				break;
			}
			flag = 1;
		}

		if (flag == 1)
		{
			cout << "请输入学生名字：";
			cin >> s[i].name;
			cout << "请输入学生平时成绩：";
			cin >> s[i].usual;
			cout << "请输入学生考试成绩：";
			cin >> s[i].test;
			//s[i].num2 = atof(s[i].num);
			s[i].del = 0;
			s[i].sum = 0.2 * s[i].usual + 0.8 * s[i].test;
			if (addStudent(s[i]) == 0) {
				cout << "添加学生信息失败！" << endl;
				break;
			}
			else {
				cout << "姓名" << "\t\t\t" << "学号" << "\t\t\t" << "总评成绩" << endl;
				cout << s[i].name << "\t\t\t" << s[i].num << "\t\t\t" << s[i].sum << endl;
			}
			i++;
		}
	}
	system("pause");
}

void StuM::query()		//查询
{
	system("cls");
	cout << "-----------正在查询中-----------" << endl;
	cout << "请输入查询的学生姓名或者是学号：" << endl;
	char NameorNum[20] = { 0 };
	cin >> NameorNum;//姓名或者学号 
	Student student[50];
	int i;
	int n = getStudent(student);
	int judge = 0;//判断是否查询到该学生 
	if (n <= 0)
	{
		cout << "请您先录入学生信息。" << endl;
		return;
	}
	else
	{
		for (i = 0;i < n;i++)
		{
			if (strcmp(NameorNum, student[i].name) == 0 || strcmp(NameorNum, student[i].num) == 0 &&student[i].del==0)
			{
				judge = 1;
				cout << "您要查询的学生信息如下：" << endl;
				cout << "姓名" << "\t\t\t" << "学号" << "\t\t\t" << "总评成绩" << endl;
				cout << student[i].name << "\t\t\t" << student[i].num << "\t\t\t" << student[i].sum << endl;
			}
		}
	}
	if (judge == 0)
	{
		cout << "未查询到该学生，请检查您输入的学号或者姓名是否错误。" << endl;
	}
	system("pause");
}

void StuM::put()		//显示
{
	system("cls");
	int num = 0;//学生人数
	int i = 0;
	num = getStudent(student);//得到学生人数，将学生信息存入student数组
	for (i = 0; i < num; i++)
	{
		student[i].num2 = atof(student[i].num);//将学号转化为double类型
	}
	sort(student, student + num, cmp_n);//按学号排序
	cout << "学生信息如下：" << endl;
	cout << "姓名" << "\t\t\t\t" << "学号" << "\t\t\t\t" << "平时成绩" << "\t\t" << "考试成绩"<<"\t\t"<<"总成绩" << endl;
	for (i = 0; i < num; i++)
	{
		if (student[i].del == 0) {
			cout << student[i].name << "\t\t\t\t" << student[i].num << "\t\t\t\t"
				<< student[i].usual << "\t\t\t" << student[i].test << "\t\t\t"<<student[i].sum << endl;
		}
	}
	system("pause");
}

void StuM::Delete(){	//删除
	system("cls");
	int i, j, flag = 0;
	char num[20];
	Student dele;
	//printf("Please input the id:\n");
	cout << "请输入学生学号:";
	cin >> num;
	
	int n = getStudent(student);
	for (i = 0; i < n; i++)
	{
		if (strcmp(student[i].num,num)==0&&student[i].del==0)
		{
			dele = student[i];
			flag = 1;
			dele.del = 1;
			cout << "您是否确定要删除（Y-yes,N-no):";
			char ch;
			cin >> ch;
			if (ch == 'Y' || ch == 'y') {
				if (Update(dele, student[i]) == 0) {
					cout << "删除失败，请重试！" << endl;
					break;
				}
				else {
					cout << "删除成功！" << endl;
				}
			}
			else {
				cout << "已取消删除！" << endl;
			}

		}
	}
	system("pause");
}

void StuM::update()		//更新
{
	system("cls");
	cout << "------修改菜单------" << endl;
	int choice = -1;
	int n = getStudent(student);//学生人数

	do {

		cout << "1.名字修改" << endl;
		//cout << "2.学号修改" << endl;
		cout << "2.平时成绩修改" << endl;
		cout << "3.考试成绩修改" << endl;
		cout << "0.退出修改界面" << endl;

		cin >> choice;//选择
		Modify modify;
		switch (choice)
		{
		case 1:modify.Modfiy_name(student, n); break;
		//case 2:modify.Modfiy_num(student, n); break;
		case 3:modify.Modfiy_test(student, n); break;
		case 2:modify.Modfiy_usual(student, n); break;
		case 0:modify.Exit(); break;
		}

	} while (choice);
	system("pause");
}

void StuM::statistics()	//统计
{
	system("cls");
	int n = getStudent(student);
	int f = 0, d = 0, c = 0, b = 0, a = 0;//f:60以下，d:60~70分，c:70~80分，b:80~90分，a:90~100分
	int i = 0, j = 0;
	double average = 0;
	for (i = 0;i < n;i++) {
		if (student[i].del == 0) {
			if (student[i].sum < 60) f++;
			else if (student[i].sum < 70) d++;
			else if (student[i].sum < 80) c++;
			else if (student[i].sum < 90) b++;
			else a++;
			average += student[i].sum;
			j++;
		}
	}
/*cout << endl << "======>>    输出学生统计数据    <<======\n" << endl;
	cout << "---------------------------------------" << endl;
	cout << "学号" << "\t" << "姓名" << "\t" << "总评成绩" << endl;
	cout << "---------------------------------------" << endl;
	for (int i = 0; i < n; i++) {
		if (student[i].del == 0) {
			cout << student[i].num << "\t" << student[i].name << "\t" << student[i].sum << endl;
		}
	}
	cout << "---------------------------------------" << endl;*/
	cout << "------------输出学生统计数据----------\n" << endl;
	cout << "60分以下的人数：" << f << "\t\t\t" << "所占总人数百分比(%):" << (f *1.0/ n) * 100 << endl;
	cout << "60~70分的人数：" << d << "\t\t\t" << "所占总人数百分比(%):" << (d *1.0/ n) * 100 << endl;
	cout << "70~80分的人数：" << c << "\t\t\t" << "所占总人数百分比(%):" << (c *1.0/ n) * 100 << endl;
	cout << "80~90分的人数：" << b << "\t\t\t" << "所占总人数百分比(%):" << (b *1.0/ n) * 100 << endl;
	cout << "90~100分的人数：" << a << "\t\t\t" << "所占总人数百分比(%):" << (a *1.0/ n) * 100 << endl;
	cout << "本课程平均成绩：" << average / j << endl;
	system("pause");
}

bool cmp_n(Student x, Student y)
{
	return x.num2 < y.num2;
}//比较n的大小

void Modify::Modfiy_name(Student student[], int n)//修改姓名
{
	char Num[20];
	cout << "请输入学生学号：";
	cin >> Num;

	int i = 0;

	char new_Name[20];

	cout << "请输入新名字：";
	cin >> new_Name;

	for (i; i < n; i++)
	{
		if (strcmp(Num, student[i].num) == 0&&student[i].del==0)
		{
			//student[i].name = new_Name;
			Student origin = student[i];//存储符合条件学生的信息
			/*cout << "修改前：" << endl;
			cout << "学号:" << student[i].num << "名字" << student[i].name
				<< "平时成绩" << student[i].usual << "考试成绩" << student[i].test << "总评" << student[i].sum << endl;*/
			cout << "-----------修改前-----------\n" << endl;
			cout << "姓名" << "\t\t\t\t" << "学号" << "\t\t\t\t" << "平时成绩" << "\t\t" << "考试成绩" << "\t\t" << "总评成绩" << endl;
			cout << student[i].name << "\t\t\t\t" << student[i].num << "\t\t\t\t"
				<< student[i].usual << "\t\t\t" << student[i].test << "\t\t\t" << student[i].sum << endl;
			strcpy_s(student[i].name, new_Name);
			if (Update(student[i], origin) == 0) {
				cout << "更改失败！" << endl;
				break;
			}
			cout << "-----------修改后----------\n" << endl;
			cout << "姓名" << "\t\t\t\t" << "学号" << "\t\t\t\t" << "平时成绩" << "\t\t" << "考试成绩" << "\t\t" << "总评成绩" << endl;
			cout << student[i].name << "\t\t\t\t" << student[i].num << "\t\t\t\t"
				<< student[i].usual << "\t\t\t" << student[i].test << "\t\t\t" << student[i].sum << endl;
			break;
		}
	}

	if (i >= n)
	{
		cout << "学号不存在！" << endl;
	}
}

void Modify::Modfiy_usual(Student student[], int n)//修改平时成绩
{
	char Num[20];

	cout << "请输入学号：";
	cin >> Num;

	double u;
	cout << "请输入新平时成绩:";
	cin >> u;

	int i = 0;
	for (i = 0; i < n; i++)
	{
		if (strcmp(Num, student[i].num) == 0&&student[i].del==0)
		{
			Student origin = student[i];
			cout << "-----------修改前-----------\n" << endl;
			cout << "姓名" << "\t\t\t\t" << "学号" << "\t\t\t\t" << "平时成绩" << "\t\t" << "考试成绩" << "\t\t" << "总评成绩" << endl;
			cout << student[i].name << "\t\t\t\t" << student[i].num << "\t\t\t\t"
				<< student[i].usual << "\t\t\t" << student[i].test << "\t\t\t" << student[i].sum << endl;
			student[i].usual = u;
			student[i].sum = (0.2 * u) + (0.8 * student[i].test);//更新总评成绩
			if (Update(student[i], origin) == 0) {
				cout << "更改失败！" << endl;
				break;
			}
			cout << "-----------修改后----------\n" << endl;
			cout << "姓名" << "\t\t\t\t" << "学号" << "\t\t\t\t" << "平时成绩" << "\t\t" << "考试成绩" << "\t\t" << "总评成绩" << endl;
			cout << student[i].name << "\t\t\t\t" << student[i].num << "\t\t\t\t"
				<< student[i].usual << "\t\t\t" << student[i].test << "\t\t\t" << student[i].sum << endl;
			break;
		}
	}
	if (i >= n)
	{
		cout << "学号不存在！" << endl;
	}
}

void Modify::Modfiy_test(Student student[], int n)//修改考试成绩
{
	char Num[20];

	cout << "请输入学号:";
	cin >> Num;

	int i = 0;

	double Test;

	cout << "请输入新考试成绩：";
	cin >> Test;

	for (i; i < n; i++)
	{
		if (strcmp(Num, student[i].num) == 0&&student[i].del==0)
		{
			Student origin = student[i];
			cout << "-----------修改前-----------\n" << endl;
			cout << "姓名" << "\t\t\t\t" << "学号" << "\t\t\t\t" << "平时成绩" << "\t\t" << "考试成绩" << "\t\t" << "总评成绩" << endl;
			cout << student[i].name << "\t\t\t\t" << student[i].num << "\t\t\t\t"
				<< student[i].usual << "\t\t\t" << student[i].test << "\t\t\t" << student[i].sum << endl;
			student[i].test = Test;
			student[i].sum = (0.2 * student[i].usual) + (0.8 * Test);//更新总评成绩
			if (Update(student[i], origin) == 0) {
				cout << "更改失败！" << endl;
				break;
			}

			cout << "-----------修改后----------\n" << endl;
			cout << "姓名" << "\t\t\t\t" << "学号" << "\t\t\t\t" << "平时成绩" << "\t\t" << "考试成绩" << "\t\t" << "总评成绩" << endl;
			cout << student[i].name << "\t\t\t\t" << student[i].num << "\t\t\t\t"
				<< student[i].usual << "\t\t\t" << student[i].test << "\t\t\t" << student[i].sum << endl;
			break;
		}
	}

	if (i >= n)
	{
		cout << "学号不存在！" << endl;
	}
}

void Modify::Exit()
{
	cout << "退出修改" << endl;
	return;
}
/*void Modify::Modfiy_num(Student student[], int n) {
	char Num[20];
	char newNum[20];
	int i = 0;
	cout << "请输入学号:";
	cin >> Num;
	cout << "请输入新学号:";
	cin >> newNum;
	for (i; i < n; i++)
	{
		if (strcmp(Num, student[i].num) == 0)
		{
			//student[i].name = new_Name;
			Student origin = student[i];//存储符合条件学生的信息
			cout << "修改前：" << endl;
			cout << "学号:" << student[i].num << "名字" << student[i].name
				<< "平时成绩" << student[i].usual << "考试成绩" << student[i].test << "总评" << student[i].sum << endl;
			strcpy_s(student[i].num, newNum);
			if (Update(student[i], origin) == 0) {
				cout << "更改失败！" << endl;
			}
			cout << "修改后：" << endl;
			cout << "学号:" << student[i].num << "名字" << student[i].name
				<< "平时成绩" << student[i].usual << "考试成绩" << student[i].test << "总评" << student[i].sum << endl;
			break;
		}
	}

	if (i >= n)
	{
		cout << "原学号不存在！" << endl;
	}
}*/




stu_service.cpp
#include "stu_service.h"
int Ser::addStudent(Student adding) {
	return saveStudent(adding);
}
int Ser::getStudent(Student student[]) {
	return readStudent(student);
}
int Ser::Update(Student updating, Student origin) {
	return updateStudent(updating, origin);
}



stu_file.cpp
#include"stu_file.h"
int Fil::saveStudent(Student adding)
{
	if ((fp = fopen("student.ams", "ab")) == NULL) {
		if ((fp = fopen("student.ams", "wb")) == NULL) {
			cout << "0";
			return 0;
		}
	}
	fwrite(&adding, sizeof(Student), 1, fp);
	fclose(fp);
	return 1;
}

int Fil::readStudent(Student student[])
{
	int i = 0;
	if ((fp = fopen("student.ams", "rb")) == NULL) {
		return 0;
	}
	while (fread(&student[i], sizeof(Student), 1, fp))
	{
		i++;
	}
	fclose(fp);
	return i;
}
int Fil::updateStudent(Student updating, Student origin)
{
	Student up;
	long n = 0;
	int t = 0;//卡数量
	FILE* fp;
	if ((fp = fopen("student.ams", "rb+")) == NULL) {
		return 0;
	}
	while (!feof(fp)) {
		if (fread(&up, sizeof(Student), 1, fp)) {
			if (strcmp(origin.num, up.num) == 0) {
				n = ftell(fp) - sizeof(Student);
				t = 1;
				break;
			}
		}
	}
	fseek(fp, n, SEEK_SET);
	fwrite(&updating, sizeof(Student), 1, fp);
	fclose(fp);
	return t;
}



model.h
#define _CRT_SECURE_NO_WARNINGS 
#ifndef MODEL_H
#define MODEL_H
#include <iostream>
#include <cstdlib>
#include <cstring>
#include<algorithm>
using namespace std;

/*typedef struct student {
	char name[20];	//名字
	char num[20];	//学号
	double usual;	//平时成绩
	double test;	//考试成绩
	double sum;		//总评成绩
	int del;//删除，1-删除，0-未删除
}Student;*/

class Student
{
public:
	char name[20];	//名字
	char num[20];		//学号
	double usual;	//平时成绩
	double test;	//考试成绩
	double sum;		//总评成绩
	double num2;    //用于排序
	int del;        //删除，1-删除，0-未删除
	Student(){}
};

#endif // !MODEL_H




menu.h
#ifndef MENU_H
#define MENU_H
#include "model.h"
#include "stu_service.h"
class StuM :public Ser {
private: 
	Student student[1000];
public:
	void add();			//添加学生信息
	void query();		//查询学生信息
	void Delete();		//删除学生信息
	void update();		//更新学生信息
	//Modify modify;
	void put();			//显示学生信息
	void statistics();	//统计分析
	//void exipApp();	//退出
};
void outMenu();
bool cmp_n(Student x, Student y);    //比较n的大小
class Modify :public Ser {
public:
	void Modfiy_name(Student student[], int n);
	void Modfiy_num(Student student[], int n);
	void Modfiy_usual(Student student[], int n);
	void Modfiy_test(Student student[], int n);
	void Exit();
};
#endif


stu_service.h
#ifndef STU_SERVICE_H
#define STU_SERVICE_H
#include "model.h"
#include "stu_file.h"
class Ser :public Fil {
public:
	int addStudent(Student adding);					//添加学生信息到文件
	int getStudent(Student student[]);				//得到含有学生信息的结构体数组
	int Update(Student updating, Student origin);	//更新文件中的数据
};
#endif



stu_file.h
#ifndef STU_FILE_H
#define STU_FILE_H

#include "model.h"

class Fil {
private:
	FILE* fp;
public:
	int saveStudent(Student adding);					//添加学生信息到文件
	int readStudent(Student student[]);					//将文件信息读取到结构体
	int updateStudent(Student updating, Student origin);//更新文件信息
};

#endif